@import "../../stylesheets/variables";
@import "../../stylesheets/mixins";

.display-wrapper {
  @extend %sec-padding;
  display: flex;
  border-top: 0.2rem solid var(--color-five);
  border-bottom: 0.2rem solid var(--color-five);
  padding: 3vw 0;
  background-color: var(--color-three);

  .display {
    display: flex;
    width: 100%;
    justify-content: center;

    --cube-size: 10vw;

    .scene {
      width: var(--cube-size);
      height: var(--cube-size);
      perspective: calc(3 * var(--cube-size));
    }

    .cube {
      width: 100%;
      height: 100%;
      position: relative;
      transform-style: preserve-3d;
      transform: translateZ(calc(-0.5 * var(--cube-size)));
      transition: transform 1s;

      &__face {
        position: absolute;
        width: var(--cube-size);
        height: var(--cube-size);
        backface-visibility: hidden;
        font-size: font-size("medium");
        text-shadow: 0.2rem 0.2rem var(--color-three-a);
        display: flex;
        place-items: center;
        place-content: center;
        color: var(--color-five);
        background-color: var(--color-four);
        border: 0.2rem solid black;
        border-radius: 0.5rem;

        &--front {
          transform: rotateY(0deg) translateZ(calc(0.5 * var(--cube-size)));
        }
        &--right {
          transform: rotateY(90deg) translateZ(calc(0.5 * var(--cube-size)));
          background-color: var(--color-five);
          color: black;
        }
        &--back {
          transform: rotateY(180deg) translateZ(calc(0.5 * var(--cube-size)));
        }
        &--left {
          transform: rotateY(-90deg) translateZ(calc(0.5 * var(--cube-size)));
        }
        &--top {
          transform: rotateX(90deg) translateZ(calc(0.5 * var(--cube-size)));
        }
        &--bottom {
          transform: rotateX(-90deg) translateZ(calc(0.5 * var(--cube-size)));
        }
      }

      &.show-front {
        transform: translateZ(var(--cube-size)) rotateY(0deg);
      }
      &.show-right {
        transform: translateZ(calc(-0.5 * var(--cube-size))) rotateY(-90deg);
      }
      &.show-back {
        transform: translateZ(calc(-0.5 * var(--cube-size))) rotateY(-180deg);
      }
      &.show-left {
        transform: translateZ(calc(-0.5 * var(--cube-size))) rotateY(90deg);
      }
      &.show-top {
        transform: translateZ(calc(-0.5 * var(--cube-size))) rotateX(-90deg);
      }
      &.show-bottom {
        transform: translateZ(calc(-0.5 * var(--cube-size))) rotateX(90deg);
      }
    }
  }
}
