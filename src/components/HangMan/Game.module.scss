@import "../../stylesheets/variables";
@import "../../stylesheets/mixins";

.game {
  grid-column: center-start / center-end;
  @extend %sec-padding;
  // background-color: var(--color-four);

  .status {
    font-size: font-size("medium");
    text-align: center;
    color: var(--color-five);

    span {
      color: var(--color-two);
      font-weight: font-weight("black");
    }
  }

  .tries {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    background-color: var(--color-two);
    border-bottom: 0.2rem solid var(--color-five);
    padding: 0.5rem;

    label,
    .letter {
      font-size: 2rem;
      letter-spacing: 0.1rem;
    }

    label {
      color: var(--color-five);
    }

    .letter.failed,
    .letter.succeeded {
      width: 3rem;
      height: 3rem;
      text-align: center;
      line-height: 3rem;
      position: relative;
      z-index: 1;
    }
    .letter.succeeded {
      color: var(--color-five);
    }
    .letter.failed::before,
    .letter.succeeded::before {
      content: "";
      z-index: -1;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-spacing: 0.5rem;
      border-style: solid;
      border-radius: 50%;
    }
    .letter.failed::before {
      border-color: red;
      animation-name: kf__shake;
      animation-duration: 0.2s;
      animation-iteration-count: infinite;
    }
    .letter.succeeded::before {
      border-color: greenyellow;
      animation-name: kf__rotate;
      animation-duration: 2s;
      animation-iteration-count: infinite;
    }
  }

  .leave-btn {
    padding: 2vw 4vw;
    border: none;
    border-radius: 1rem;
    font-size: font-size("small");
    color: var(--color-five);
    background-color: red;
    letter-spacing: 0.1rem;
    display: block;
    margin: 0 auto;
  }

  @include media-small {
    padding-top: 20vh;
  }
}

@keyframes kf__rotate {
  0% {
    transform: rotateY(0deg);
  }
  25% {
    transform: rotateY(90deg);
  }
  50% {
    transform: rotateY(180deg);
  }
  75% {
    transform: rotateY(270deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}

@keyframes kf__shake {
  0% {
    transform: translate(0rem, 0.1rem);
  }
  20% {
    transform: translate(0.1rem, -0.1rem);
  }
  40% {
    transform: translate(-0.1rem, 0rem);
  }
  60% {
    transform: translate(-0.1rem, 0.1rem);
  }
  80% {
    transform: translate(0rem, -0.1rem);
  }
  100% {
    transform: translate(0rem, 0rem);
  }
}
